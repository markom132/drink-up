name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  pmd_and_jacoco:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Importing MYSQL file
        env:
          DB_HOST: 127.0.0.1
          DB_CONNECTION: mysql
          DB_DATABASE: party_up
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          sudo /etc/init.d/mysql start
          until mysqladmin ping --host=mysql --user=root --password=root --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Build with Maven
        run: |
          cd party-up-service
          mvn clean install

      - name: Run PMD Analysis
        run: |
          cd party-up-service
          mvn pmd:check

      - name: Run Tests with JaCoCo
        run: |
          cd party-up-service
          mvn test jacoco:report

      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: target/site/jacoco

  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Run Checkstyle
        run: |
          cd party-up-service
          mvn checkstyle:check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: |
          cd party-up-frontend
          npm install

      - name: Run ESLint
        run: |
          cd party-up-frontend
          npm run lint

  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: |
          cd party-up-frontend
          npm install

      - name: Run Prettier
        run: |
          cd party-up-frontend
          npx prettier --check .

  stylelint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: |
          cd party-up-frontend
          npm install

      - name: Run Stylelint
        run: |
          cd party-up-frontend
          npx stylelint "**/*.css"

  cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: npm install
        working-directory: ./party-up-frontend

      - name: Start the app
        run: npm start &
        working-directory: ./party-up-frontend

      - name: Wait for app to start
        run: sleep 10

      - name: Run Cypress tests
        run: npx cypress run
        working-directory: ./party-up-frontend
