name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
pmd_and_jacoco:
  runs-on: ubuntu-latest

  services:
    mysql:
      image: mysql:8.0
      env:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: party_up
        MYSQL_USER: ${{ secrets.DB_USERNAME }}
        MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
      ports:
        - 3306:3306
      options: --health-cmd="mysqladmin ping --silent --host=mysql --password=root" --health-interval=10s --health-timeout=5s --health-retries=5

  steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Set up MySQL environment variables
      run: |
        echo "spring.datasource.url=jdbc:mysql://mysql:3306/party_up" >> party-up-service/src/main/resources/application.properties
        echo "spring.datasource.username=root" >> party-up-service/src/main/resources/application.properties
        echo "spring.datasource.password=root" >> party-up-service/src/main/resources/application.properties
        echo "spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver" >> party-up-service/src/main/resources/application.properties

    - name: Wait for MySQL to be ready
      run: |
        until mysqladmin ping --host=mysql --user=root --password=root --silent; do
          echo "Waiting for MySQL..."
          sleep 5
        done

    - name: Build with Maven
      run: |
        cd party-up-service
        mvn clean install

    - name: Run PMD Analysis
      run: |
        cd party-up-service
        mvn pmd:check

    - name: Run Tests with JaCoCo
      run: |
        cd party-up-service
        mvn test jacoco:report

    - name: Upload JaCoCo Report
      uses: actions/upload-artifact@v3
      with:
        name: jacoco-report
        path: target/site/jacoco

  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Run Checkstyle
        run: |
          cd party-up-service
          mvn checkstyle:check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: |
          cd party-up-frontend
          npm install

      - name: Run ESLint
        run: |
          cd party-up-frontend
          npm run lint

  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: |
          cd party-up-frontend
          npm install

      - name: Run Prettier
        run: |
          cd party-up-frontend
          npx prettier --check .

  stylelint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: |
          cd party-up-frontend
          npm install

      - name: Run Stylelint
        run: |
          cd party-up-frontend
          npx stylelint "**/*.css"

  cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: npm install
        working-directory: ./party-up-frontend

      - name: Start the app
        run: npm start &
        working-directory: ./party-up-frontend

      - name: Wait for app to start
        run: sleep 10

      - name: Run Cypress tests
        run: npx cypress run
        working-directory: ./party-up-frontend
